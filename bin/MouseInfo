#!/bin/python

# MouseInfo
# [detsch] - 18/04/20005: adapted from previous scripts
#
import sys, os.path

class Mouse :
        mice = {
                # (gpm protocol, X protocol, device, emulate3, shortname)
                ("ALPS - GlidePoint (PS/2)"):
                ("ps/2", "GlidePointPS/2", "psaux", 1, "alpsps/2"),
                ("ASCII - MieMouse (serial)"):
                ("ms3", "IntelliMouse", "ttyS", 0, "ascii"),
                ("ASCII - MieMouse (PS/2)"):
                ("ps/2", "NetMousePS/2", "psaux", 1, "asciips/2"),
                ("ATI - Bus Mouse"):
                ("Busmouse", "BusMouse", "atibm", 1, "atibm"),
                ("Generic - 2 Button Mouse (serial)"):
                ("Microsoft", "Microsoft", "ttyS", 1, "generic"),
                ("Generic - 3 Button Mouse (serial)"):
                ("Microsoft", "Microsoft", "ttyS", 0, "generic3"),
                ("Generic - 2 Button Mouse (PS/2)"):
                ("ps/2", "PS/2", "psaux", 1, "genericps/2"),
                ("Generic - 3 Button Mouse (PS/2)"):
                ("ps/2", "PS/2", "psaux", 0, "generic3ps/2"),
                ("Generic - Wheel Mouse (PS/2)"):
                ("imps2", "IMPS/2", "psaux", 0, "genericwheelps/2"),
                ("Generic - 2 Button Mouse (USB)"):
                ("imps2", "IMPS/2", "input/mice", 1, "genericusb"),
                ("Generic - 3 Button Mouse (USB)"):
                ("imps2", "IMPS/2", "input/mice", 0, "generic3usb"),
                ("Generic - Wheel Mouse (USB)"):
                ("imps2", "IMPS/2", "input/mice", 0, "genericwheelusb"),
                ("Genius - NetMouse (serial)"):
                ("ms3", "IntelliMouse", "ttyS", 1, "geniusnm"),
                ("Genius - NetMouse (PS/2)"):
                ("netmouse", "NetMousePS/2", "psaux", 1, "geniusnmps/2"),
                ("Genius - NetMouse Pro (PS/2)"):
                ("netmouse", "NetMousePS/2", "psaux", 1, "geniusprops/2"),
                ("Genius - NetScroll (PS/2)"):
                ("netmouse", "NetScrollPS/2", "psaux", 1, "geniusscrollps/2"),
                ("Genius - NetScroll+ (PS/2)") :
                ("netmouse", "NetMousePS/2", "psaux", 0, "geniusscrollps/2+"),
                ("Kensington - Thinking Mouse (serial)"):
                ("Microsoft", "ThinkingMouse", "ttyS", 1, "thinking"),
                ("Kensington - Thinking Mouse (PS/2)"):
                ("ps/2", "ThinkingMousePS/2", "psaux", 1, "thinkingps/2"),
                ("Logitech - C7 Mouse (serial, old C7 type)"):
                ("Logitech", "Logitech", "ttyS", 0, "logitech"),
                ("Logitech - CC Series (serial)"):
                ("logim", "MouseMan", "ttyS", 0, "logitechcc"),
                ("Logitech - Bus Mouse"):
                ("Busmouse", "BusMouse", "logibm", 0, "logibm"),
                ("Logitech - MouseMan/FirstMouse (serial)"):
                ("MouseMan", "MouseMan", "ttyS", 0, "logimman"),
                ("Logitech - MouseMan/FirstMouse (PS/2)"):
                ("ps/2", "PS/2", "psaux", 0, "logimmanps/2"),
                ("Logitech - MouseMan+/FirstMouse+ (serial)"):
                ("pnp", "IntelliMouse", "ttyS", 0, "logimman+"),
                ("Logitech - MouseMan+/FirstMouse+ (PS/2)"):
                ("ps/2", "MouseManPlusPS/2", "psaux", 0, "logimman+ps/2"),
                ("Logitech - MouseMan Wheel (USB)"):
                ("ps/2", "IMPS/2", "input/mice", 0, "logimmusb"),
                ("Microsoft - Compatible Mouse (serial)"):
                ("Microsoft", "Microsoft", "ttyS", 1, "microsoft"),
                ("Microsoft - Rev 2.1A or higher (serial)"):
                ("pnp", "Auto", "ttyS", 1, "msnew"),
                ("Microsoft - IntelliMouse (serial)"):
                ("ms3", "IntelliMouse", "ttyS", 0, "msintelli"),
                ("Microsoft - IntelliMouse (PS/2)"):
                ("imps2", "IMPS/2", "psaux", 0, "msintellips/2"),
                ("Microsoft - IntelliMouse (USB)"):
                ("ps/2", "IMPS/2", "input/mice", 0, "msintelliusb"),
                ("Microsoft - Bus Mouse"):
                ("Busmouse", "BusMouse", "inportbm", 1, "msbm"),
                ("Mouse Systems - Mouse (serial)"):
                ("MouseSystems", "MouseSystems", "ttyS", 1, "mousesystems"),
                ("MM - Series (serial)"):
                ("MMSeries", "MMSeries", "ttyS", 1, "mmseries"),
                ("MM - HitTablet (serial)"):
                ("MMHitTab", "MMHittab", "ttyS", 1, "mmhittab"),
                ("No - mouse") :("none", "none", None, 0, "none"),
                ("Sun - Mouse"): ("sun", "sun", "sunmouse", 0, "sun"),
        }

        def parseHwConf(self, hwConfLines) :
                lines = hwConfLines

                mouseDriver = ''
                mouseDevice = '/dev/tts/0'

                inMouseSection = 0
                for line in lines :
                        if inMouseSection :
                                if mouseDriver and mouseDevice :
                                        break
                                l = line.split()
                                if len(l) > 1 :
                                        if l[0] == 'device:' :
                                                mouseDevice = '/dev/'+l[1]
                                        elif l[0] == 'driver:' :
                                                mouseDriver = l[1]
                        else :
                                if line.strip() == 'class: MOUSE' :
                                        inMouseSection = 1


                for key in self.mice.keys() :
                        (gpm_protocol, x_protocol, device, emulate3, shortname) = self.mice[key]
                        if shortname == mouseDriver :
                                if emulate3 :
                                        emu = 'yes'
                                else :
                                        emu = 'no'
                                return mouseDevice, gpm_protocol, x_protocol, emu

                return '/dev/input/mice', 'ms',  'auto', 'yes'

def getMouseOptions(mode='') :
	mouse = Mouse()
	
	f = os.popen('raw_mouseinfo')
	l = f.readlines()
	f.close()
	
	mouseDevice, gpm_protocol, x_protocol, emulate3 = mouse.parseHwConf(l)
	
	o = ''
	if mode == '' :
#		o += 'MouseDevice='    + mouseDevice  +' # Mouse Device\n'
#		o += 'MouseType='      + gpm_protocol +' # Mouse GPM protocol\n'
#		o += 'MouseXProtocol=' + x_protocol   +' # Mouse X11 protocol\n'
#		o += 'Emulate3Buttons='+ emulate3     +' # Set emulate 3 buttons at xorg.conf?\n'
		o += 'MouseDevice='    + mouseDevice  +'\n'
		o += 'MouseType='      + gpm_protocol +'\n'
		o += 'MouseXProtocol=' + x_protocol   +'\n'
		o += 'Emulate3Buttons='+ emulate3     +'\n'
	
	elif mode == 'BootOptions' :
		o += 'MouseDevice='    + mouseDevice  +' # Mouse Device\n'
		o += 'MouseType='      + gpm_protocol +' # Mouse GPM protocol\n\n'
	
	elif mode == 'xorg.conf' :
	# 	Section "InputDevice"
	# 		Identifier  "Mouse0"
	# 		Driver      "mouse"
	# 		Option      "Protocol" "auto"
	# 		Option      "Device" "/dev/psaux"
	# 		Option "Emulate3Buttons"
	# 	EndSection
		
		o += 'Option      "Protocol" "%s"\n'%x_protocol
		o += 'Option      "Device" "%s"\n'%mouseDevice
		if emulate3 == 'yes' :
			o += 'Option      "Emulate3Buttons"'
		else :
			o += '#Option      "Emulate3Buttons"'
	elif mode == 'simple' :
		o += mouseDevice + ' '
		o += gpm_protocol + ' '
		o += x_protocol + ' '
		o += emulate3 + ' '
		
	return o

	
if __name__ == '__main__' :
	if len(sys.argv) < 2 :
		mode = ''
	else :
		mode = sys.argv[1]
	
	o = getMouseOptions(mode)
	print o
