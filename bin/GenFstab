#!/bin/sh

. GoboPath

################################################################################
# Guess context
################################################################################

# Check if running from Live CD
root=`mount | grep "/Mount/GoboLinux" | head -n 1 | awk '{ print $1 }'`
# Assume it applies to currently running system
if ! [ "$root" ]
then
   root=`readlink -f /dev/root`
fi
root=`readlink -f /$root`

################################################################################
# Header
################################################################################

echo 
echo "# Automatically generated by $0"
echo "# on `date`"
echo

################################################################################
# Virtual filesystems
################################################################################

echo "# Proc filesystem."
echo "proc $goboStatus proc defaults 0 0"
echo

echo "# Sys filesystem (kernel 2.6)."
echo "none /System/Kernel/Objects sysfs defaults 0 0"
echo

echo "# Pts filesystem (kernel 2.6)."
echo "none /System/Kernel/Devices/pts devpts defaults 0 0"
echo

echo "# USB filesystem (kernel 2.6)."
echo "none /System/Kernel/Status/bus/usb usbfs defaults 0 0"
echo

echo "# shm (kernel 2.6)."
echo "none /System/Kernel/Devices/shm tmpfs  defaults 0 0"
echo

echo "# GoboLinux Live CD."
echo "/Mount/CD-ROM/GoboLinux.squashfs /Mount/SquashFS squashfs loop,noauto,user"
echo


################################################################################
# IDE Drives
################################################################################

upper=(A B C D E F G H I J)
lower=(a b c d e f g h i j)
for drive in 0 1 2 3 4 5 6 7 8 9
do
   device=/dev/hd${lower[drive]}
   realdev=`readlink -f "$device"`
   [ -e "$realdev" ] || continue
   fdisk -l "$realdev" 2>&1 | grep "^/" | awk -v "root=$root" -v "drive=${upper[drive]}" '
      BEGIN {
         lastpart=1
         win=1
	 dos=1
      }
      {
         part=$1
	 if ($1 == "") {
	    exit
	 }
	 if ($2 == "*")
	    n = 3
	 else
	    n = 2
	 n += 3
	 
	 
	 if ($1 == root) {
	    print "# Root partition."
	    print $1 " / auto defaults 1 0" 
	    print ""
	 } else if ($(n) == "1" || $(n) == "4" || $(n) == "6") {
	    print "# DOS partition."
	    if (dos == 1)
	       print $1 " /Mount/DOS msdos defaults 1 0" 
	    else
	       print $1 " /Mount/DOS" dos " msdos umask=000 1 0" 
	    print ""
	    dos++
	 } else if ($(n) == "b" || $(n) == "c") {
	    print "# Windows partition."
	    if (win == 1)
	       print $1 " /Mount/Windows vfat defaults 1 0" 
	    else
	       print $1 " /Mount/Windows" win " vfat umask=000 1 0" 
	    print ""
	    win++
	 } else if ($(n) == "e") {
	    print "# Windows partition."
	    if (win == 1)
	       print $1 " /Mount/Windows msdos defaults 1 0" 
	    else
	       print $1 " /Mount/Windows" win " msdos umask=000 1 0" 
	    print ""
	    win++
	 } else if ($(n) == "82") {
	    print "# Swap partition."
	    print $1 " none swap pri=1 0 0" 
	    print ""
	 } else if ($(n) != "5") {
	    partnum=substr($1, length($1))

            // so that hda10 does not become HDA0
	    if (lastpart > int(partnum)) {
	       lastpart++
	       partnum = lastpart
	    } else {
	       lastpart = int(partnum)
	    }

	    print "# Additional partition."
	    print $1 " /Mount/HD" drive partnum " auto defaults 1 0" 
	    print ""
	 }
      }
   '
done

################################################################################
# Floppy Drives
################################################################################

floppysettings="auto noauto,users,rw 1 0"
for floppy in 0 1 2 3 4
do
   device=`readlink -f /dev/floppy/$floppy`
   if [ -e "$device" ]
   then
      echo "# Floppy drive."
     if [ $floppy -eq 0 ]
     then mountpoint="/Mount/Floppy"
     else mountpoint="/Mount/Floppy"$[floppy+1]
     fi
     echo "$device $mountpoint $floppysettings" 
     echo
   fi
done

################################################################################
# CD-ROM Drives
################################################################################

cdsettings="auto ro,noauto,users,exec 1 0"
#for cdrom in 0 1 2 3 4
#do
#   device=`readlink -f /dev/cdroms/cdrom$cdrom`
#   if [ -e "$device" ]
#   then
#      echo "# CD-ROM drive."
#     if [ $cdrom -eq 0 ]
#     then mountpoint="/Mount/CD-ROM"
#     else mountpoint="/Mount/CD-ROM"$[cdrom+1]
#     fi
#     echo "$device $mountpoint $cdsettings" 
#     echo
#   fi
#done

for raw_device in /dev/cdrom*
do
   device=`readlink -f $raw_device`
   if [ -e "$device" ]
   then
     echo "# CD-ROM drive."
     if [ "$raw_device" = "/dev/cdrom" ]
     then mountpoint="/Mount/CD-ROM"
     else mountpoint="/Mount/CD-ROM1"
     fi
     echo "$device $mountpoint $cdsettings" 
     echo
   fi
done
