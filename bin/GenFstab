#!/bin/bash

. GoboPath

################################################################################
# Guess context
################################################################################

# Check if running from Live CD
root=`mount | grep "/Mount/GoboLinux" | head -n 1 | awk '{ print $1 }'`
# Assume it applies to currently running system
if ! [ "$root" ]
then
   root=`mount | grep -i dev | grep " / " | awk '{print $1}'`
fi
root=`readlink -f /$root`

################################################################################
# Header
################################################################################

echo 
echo "# Automatically generated by $0"
echo "# on `date`"
echo

################################################################################
# Virtual filesystems
################################################################################

echo "# Proc filesystem."
echo "proc $goboStatus proc defaults 0 0"
echo

echo "# Sys filesystem."
echo "none /System/Kernel/Objects sysfs defaults 0 0"
echo

echo "# Pts filesystem."
echo "none /System/Kernel/Devices/pts devpts defaults 0 0"
echo

echo "# USB filesystem."
echo "none /System/Kernel/Status/bus/usb usbfs defaults 0 0"
echo

echo "# Shared memory."
echo "none /System/Kernel/Devices/shm tmpfs  defaults 0 0"
echo


################################################################################
# Hard Disk Drives
################################################################################

unset fat
unset win
function gen_config() {
   lastpart=1
   devicetype="$1"
   drive="${upper[drive]}"

   result=`fdisk -l "$realdev" 2>&1 | grep "^/"`
   partlist=`echo "$result" | awk {'print $1'} | tr "\n" " "`
   for part in $partlist
   do
      [ "$part" = "" ] && continue

      bootableflag=`echo "$result" | awk {'print $2'}`
      if [ "$bootableflag" = "*" ]
      then n=`echo "$result" | awk {'print $6'}`
      else n=`echo "$result" | awk {'print $5'}`
      fi

      if [ "$part" = "$root" ]
      then
         echo "# Root partition."
         echo $part " / auto defaults 1 0" 
         echo
      elif [ "$n" = "1" -o "$n" = "4" -o "$n" = "6" -o "$n" = "b" -o "$n" = "c" -o "$n" = "e" ]
      then
         mountname="FAT"
         mountopts="umask=000"
         if mount $part /Mount 2> /dev/null
         then
            if ls /Mount/ | grep -qi "^windows$"
            then
                mountname="Windows"
                mountopts="defaults"
            fi
            umount /Mount
         fi
         echo "# $mountname partition."
         if [ "$win" = "1" ]
         then
            echo "$part /Mount/${mountname}${win} vfat $mountopts 1 0"
            echo
            if [ "$win" ]
            then let win=win+1
            else win=2
            fi
         else
            echo "$part /Mount/${mountname}${fat} vfat $mountopts 1 0"
            echo
            if [ "$fat" ]
            then let fat=fat+1
            else fat=2
            fi
         fi
      elif [ "$n" = "82" ]
      then
         echo "# Swap partition."
         echo "$part none swap pri=1 0 0" 
         echo
      elif [ "$n" != "5" ]
      then
         partnum=`echo $part | cut -b${#part}-`
         # so that hda10 does not become HDA0
         if [ $lastpart -gt $partnum ]
         then
            let lastpart=lastpart+1
            partnum=$lastpart
         else
            lastpart=$partnum
         fi
         echo "# Additional partition."
         echo $part " /Mount/${devicetype}${drive}${partnum} auto defaults 1 0" 
         echo
      fi
  done
}

################################################################################
# IDE Drives
################################################################################

upper=(A B C D E F G H I J)
lower=(a b c d e f g h i j)
for drive in 0 1 2 3 4 5 6 7 8 9
do
   device=/dev/hd${lower[drive]}
   realdev=`readlink -f "$device"`
   [ -e "$realdev" ] || continue
   gen_config "HD"
done

################################################################################
# SCSI Drives
################################################################################

upper=(A B C D E F G H I J)
lower=(a b c d e f g h i j)
for drive in 0 1 2 3 4 5 6 7 8 9
do
   device=/dev/sd${lower[drive]}
   realdev=`readlink -f "$device"`
   [ -e "$realdev" ] || continue
   gen_config "SD"
done

################################################################################
# Floppy Drives
################################################################################

floppysettings="auto noauto,users,rw 1 0"
for floppy in 0 1 2 3 4
do
   device=`readlink -f /dev/floppy/$floppy`
   if [ -e "$device" ]
   then
      echo "# Floppy drive."
     if [ $floppy -eq 0 ]
     then mountpoint="/Mount/Floppy"
     else mountpoint="/Mount/Floppy"$[floppy+1]
     fi
     echo "$device $mountpoint $floppysettings" 
     echo
   fi
done

################################################################################
# CD-ROM Drives
################################################################################

cdsettings="auto ro,noauto,users,exec 1 0"
#for cdrom in 0 1 2 3 4
#do
#   device=`readlink -f /dev/cdroms/cdrom$cdrom`
#   if [ -e "$device" ]
#   then
#      echo "# CD-ROM drive."
#     if [ $cdrom -eq 0 ]
#     then mountpoint="/Mount/CD-ROM"
#     else mountpoint="/Mount/CD-ROM"$[cdrom+1]
#     fi
#     echo "$device $mountpoint $cdsettings" 
#     echo
#   fi
#done

for raw_device in /dev/cdrom*
do
   device=`readlink -f $raw_device`
   if [ -e "$device" ]
   then
     echo "# CD-ROM drive."
     if [ "$raw_device" = "/dev/cdrom" ]
     then mountpoint="/Mount/CD-ROM"
     else mountpoint="/Mount/CD-ROM1"
     fi
     echo "$device $mountpoint $cdsettings" 
     echo
   fi
done
