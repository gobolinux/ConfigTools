#!/usr/bin/python

import os
import sys
import re

dvorak_keymap="""
# GRUB qwerty->dvorak keymap v1.0 - Matthew Mueller <donut@azstarnet.com>
# latest ver @ http://www.azstarnet.com/~donut/programs/
# paste this in the top of your menu.lst (above any menu items)

# row 1
#setkey backquote backquote
#number keys...
setkey bracketleft minus
setkey braceleft underscore
setkey bracketright equal
setkey braceright plus
#setkey backslash backslash

# row 2
setkey quote q
setkey doublequote Q
setkey comma w
setkey less W
setkey period e
setkey greater E
setkey p r
setkey P R
setkey y t
setkey Y T
setkey f y
setkey F Y
setkey g u
setkey G U
setkey c i
setkey C I
setkey r o
setkey R O
setkey l p
setkey L P
setkey slash bracketleft
setkey question braceleft
setkey equal bracketright
setkey plus braceright

# row 3
#setkey a a
setkey o s
setkey O S
setkey e d
setkey E D
setkey u f
setkey U F
setkey i g
setkey I G
setkey d h
setkey D H
setkey h j
setkey H J
setkey t k
setkey T K
setkey n l
setkey N L
setkey s semicolon
setkey S colon
setkey minus quote
setkey underscore doublequote

# row 4
setkey semicolon z
setkey colon Z
setkey q x
setkey Q X
setkey j c
setkey J C
setkey k v
setkey K V
setkey x b
setkey X B
setkey b n
setkey B N
#setkey m m
setkey w comma
setkey W less
setkey v period
setkey V greater
setkey z slash
setkey Z question
"""


def tr(s) :
	return s

def devToGrub(p) :
	grub_dev = os.popen("dev2grub.sh "+p)
	return grub_dev.readline().strip()

def getSwapPartition() :
	fdisk_data = os.popen("/sbin/fdisk -l")
	while 1 :
		line = fdisk_data.readline()
		if not line :
			break
		elif line[0] != '/' :
			continue

		partitions = line.strip('\n').split(' ')
		if (partitions[-2] == 'Linux' and partitions[-1] == 'swap') or (partitions[-4] == 'Linux' and partitions[-3] == 'swap') : 
			fdisk_data.close()
			return partitions[0]
	fdisk_data.close()

def generateGrubMenuFile(bootloaderTarget, targetPartition, keymap = '', genGraphicDesktop = True) :
	cmd = 'fdisk -l'
	lines = os.popen(cmd).readlines()

	swapPartition = getSwapPartition()

	grubFormatTarget = devToGrub('/dev/'+targetPartition)
	if (bootloaderTarget == targetPartition) or (bootloaderTarget == targetPartition[0:3]) :
		grubFormatTarget = re.sub('[1-9],','0,', grubFormatTarget)

	bootableOtherOsPartitions = []
	bootableOtherOsNames = []
	for line in lines :
		l = line.split()
		if len(l) > 1 and l[1] == '*' :

			osPartition=devToGrub(l[0])
			if osPartition == grubFormatTarget :
				continue
			
			if line.find('FAT') > -1 or line.find('NTFS') > -1:
				osName = 'Microsoft Windows'
			
			elif line.find('AIX') > -1:
				osName = 'AIX'
			
			elif line.find('QNX') > -1 :
				osName = 'QNX'
			
			elif line.find('Darwin') > -1 :
				osName = 'Darwin'
			
			elif line.find('BSD') > -1 :
				osName = 'BSD'
					
			else:
				osName = 'Other OS'
			
			bootableOtherOsPartitions.append(osPartition)
			bootableOtherOsNames.append(osName)			

	o = ''
	if keymap == 'dvorak' :
		o += dvorak_keymap

	o += '\n'
	o += 'set default=0' + '\n'
	
	o += '#set timeout=5' + '\n'
	
	#if installer.getValue('EnableGraphicGRUB') :
	#o += 'gfxmenu %s/System/Kernel/Boot/grub/message'%grubFormatTarget + '\n'

	if genGraphicDesktop :
		o += '\n'
		o += 'menuentry \"'+tr('GoboLinux - Graphic Desktop') + '\" {\n'
		o += '    set root=%s' %(grubFormatTarget) + '\n'
		o += '    linux /System/Kernel/Boot/kernel vt.default_utf8=0 gfxpayload=1024x768x24 root=/dev/%s Boot=Graphic'%targetPartition + '\n'
		o += '}\n'

	o += '\n'
	o += 'menuentry \"'+tr('GoboLinux - Console') + '\" {\n'
	o += '    set root=%s' %(grubFormatTarget) + '\n'
	o += '    linux /System/Kernel/Boot/kernel vt.default_utf8=0 gfxpayload=text root=/dev/%s'%targetPartition + '\n'
	o += '}\n'

	o += '\n'
	o += 'menuentry \"'+tr('GoboLinux - Framebuffer Console') + '\" {\n'
	o += '    set root=%s' %(grubFormatTarget) + '\n'
	o += '    linux /System/Kernel/Boot/kernel vt.default_utf8=0 gfxpayload=1024x768x24 root=/dev/%s'%targetPartition + '\n'
	o += '}\n'
	
	for partition, name in zip(bootableOtherOsPartitions, bootableOtherOsNames):
		o += '\n'
		o += 'menuentry \"%s at %s'%(name, partition) + '\" {\n'
		o += '    set root=%s' %(partition) + '\n'
		o += '    chainloader +1' + '\n'
		o += '}\n'

	return o

if __name__ == '__main__' :
	if len(sys.argv) < 5 :
	    print 'Usage: %s <bootloaderTarget> <targetPartition> <keymap> <genGraphicDesktop>'%sys.argv[0]
	    print 'Example: %s hda hda1 us 1'%sys.argv[0]
	else :
	    print generateGrubMenuFile(sys.argv[1], sys.argv[2], keymap=sys.argv[3], genGraphicDesktop=sys.argv[4])	
