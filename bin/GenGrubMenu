#!/usr/bin/python

import os
import sys

#TODO: 
# - tranformar em bash?
# - pegar as particoes windows decentemente
# - ver se o cara jah tem um grub?
# - corrigir a numeracao dos devices grub (hdd pode mesmo ser (hd0))


dvorak_keymap="""
# GRUB qwerty->dvorak keymap v1.0 - Matthew Mueller <donut@azstarnet.com>
# latest ver @ http://www.azstarnet.com/~donut/programs/
# paste this in the top of your menu.lst (above any menu items)

# row 1
#setkey backquote backquote
#number keys...
setkey bracketleft minus
setkey braceleft underscore
setkey bracketright equal
setkey braceright plus
#setkey backslash backslash

# row 2
setkey quote q
setkey doublequote Q
setkey comma w
setkey less W
setkey period e
setkey greater E
setkey p r
setkey P R
setkey y t
setkey Y T
setkey f y
setkey F Y
setkey g u
setkey G U
setkey c i
setkey C I
setkey r o
setkey R O
setkey l p
setkey L P
setkey slash bracketleft
setkey question braceleft
setkey equal bracketright
setkey plus braceright

# row 3
#setkey a a
setkey o s
setkey O S
setkey e d
setkey E D
setkey u f
setkey U F
setkey i g
setkey I G
setkey d h
setkey D H
setkey h j
setkey H J
setkey t k
setkey T K
setkey n l
setkey N L
setkey s semicolon
setkey S colon
setkey minus quote
setkey underscore doublequote

# row 4
setkey semicolon z
setkey colon Z
setkey q x
setkey Q X
setkey j c
setkey J C
setkey k v
setkey K V
setkey x b
setkey X B
setkey b n
setkey B N
#setkey m m
setkey w comma
setkey W less
setkey v period
setkey V greater
setkey z slash
setkey Z question
"""


def tr(s) :
	return s

def devToGrub(p) :
	grub_dev = os.popen("dev2grub.sh "+p)
	return grub_dev.readline().strip()

def getSwapPartition() :
	fdisk_data = os.popen("/sbin/fdisk -l")
	while 1 :
		line = fdisk_data.readline()
		if not line :
			break
		elif line[0] != '/' :
			continue

		partitions = line.strip('\n').split(' ')
		if (partitions[-2] == 'Linux' and partitions[-1] == 'swap') or (partitions[-4] == 'Linux' and partitions[-3] == 'swap') : 
			fdisk_data.close()
			return partitions[0]
	fdisk_data.close()

def generateGrubMenuFile(targetPartition, keymap = '', genGraphicDesktop = True) :
	cmd = 'fdisk -l'
	lines = os.popen(cmd).readlines()

	lines = filter(lambda x:x.find('FAT') > -1 or x.find('NTFS') > -1,lines)

	bootableWindowsPartitions = []
	for line in lines :
		l = line.split()
		if len(l) > 1 and l[1] == '*' :
			bootableWindowsPartitions.append(devToGrub(l[0]))

	grubFormatTarget = devToGrub(targetPartition)
	swapPartition = getSwapPartition()

	o = ''
	if keymap == 'dvorak' :
		o += dvorak_keymap

	o += '\n'
	o += 'default 0' + '\n'
	
	o += '#timeout 5' + '\n'
	
	#if installer.getValue('EnableGraphicGRUB') :
	o += 'splashimage %s/System/Kernel/Boot/grub/gobolinux-grub.xpm.gz'%(grubFormatTarget)+ '\n'
	o += 'foreground 003080'+ '\n'
	o += 'background 80c0ff'+ '\n'

	o += 'color white/blue blue/white' + '\n'

	if genGraphicDesktop :
		o += '\n'
		o += 'title '+tr('GoboLinux - Graphic Desktop') + '\n'
		o += 'kernel %s/System/Kernel/Boot/kernel acpi=off video=vesafb:off root=/dev/%s Boot=Graphic'%(grubFormatTarget,targetPartition) + '\n'

	o += '\n'
	o += 'title '+tr('GoboLinux - Console') + '\n'
	o += 'kernel %s/System/Kernel/Boot/kernel acpi=off video=vesafb:off root=/dev/%s'%(grubFormatTarget,targetPartition) + '\n'

	o += '\n'
	o += 'title '+tr('GoboLinux - Framebuffer Console') + '\n'
	o += 'kernel %s/System/Kernel/Boot/kernel acpi=off root=/dev/%s'%(grubFormatTarget,targetPartition) + '\n'
	
	# TODO: verificar isto:
	for partition in bootableWindowsPartitions:
		o += '\n'
		o += 'title Other OS at %s'%partition + '\n'
		o += 'rootnoverify %s'%partition + '\n'
		o += 'makeactive' + '\n'
		o += 'chainloader +1' + '\n'

	return o
	#safeWriteToFile(destMountPoint+'/System/Kernel/Boot/grub/menu.lst', o, logger)


if __name__ == '__main__' :
	if len(sys.argv) < 3 :
	    print 'Usage: %s targetPartition keymap genGraphicDesktop'%sys.argv[0]
	    print 'Example: %s hda1 us 1'%sys.argv[0]
    	else :
	    print generateGrubMenuFile(sys.argv[1], keymap=sys.argv[2], genGraphicDesktop=sys.argv[3])	
